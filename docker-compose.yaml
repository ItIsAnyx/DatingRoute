services:
  backend-api:
    build: ./backend-api
    image: backend-api
    container_name: backend_api
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://db:5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - AI_SECRET_KEY=${AI_SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - db
      - cache

  # ai:
  #   build: ./python/AI
  #   image: ai
  #   container_name: ai
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     - AI_SECRET_KEY=${AI_SECRET_KEY}
  #     - HF_MODEL=HuggingFaceTB/SmolLM2-1.7B-Instruct
  #     - DEVICE=0
  #     - HF_TOKEN=${HF_TOKEN}
  #   command: "python -m uvicorn ai:app --reload --host 127.0.0.1 --port 8082"
  
  db:
    image: postgres
    container_name: database
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  cache:
    image: redis:8.2-alpine
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --save 20 1 --requirepass $REDIS_PASSWORD
    volumes:
      - cache:/data
    ports:
      - "6379:6379"
    
volumes:
  pgdata:
  cache:
